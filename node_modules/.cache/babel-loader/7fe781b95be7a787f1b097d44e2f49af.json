{"remainingRequest":"/home/hieule/Desktop/DoAn/node_modules/babel-loader/lib/index.js!/home/hieule/Desktop/DoAn/node_modules/eslint-loader/index.js??ref--13-0!/home/hieule/Desktop/DoAn/src/store/module/food.js","dependencies":[{"path":"/home/hieule/Desktop/DoAn/src/store/module/food.js","mtime":1646549302774},{"path":"/home/hieule/Desktop/DoAn/node_modules/cache-loader/dist/cjs.js","mtime":1626151276645},{"path":"/home/hieule/Desktop/DoAn/node_modules/babel-loader/lib/index.js","mtime":1626151276101},{"path":"/home/hieule/Desktop/DoAn/node_modules/eslint-loader/index.js","mtime":1626151277117}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2hpZXVsZS9EZXNrdG9wL0RvQW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgSFRUUCB9IGZyb20gIi4uLy4uL0FQSS9odHRwX2NvbW1vbiI7CnZhciBzdGF0ZSA9IHsKICBmb29kczogW10sCiAgUXVhbnR5OiAwLAogIG9sZFF1YW46IDAsCiAgYmlsbDogW10sCiAgc3RhdHVzOiBbewogICAgdmFsdWU6IDAsCiAgICB0ZXh0OiAnQ2jhu50geMOhYyBuaOG6rW4nLAogICAgY29sb3I6ICd3YXJuaW5nJwogIH0sIHsKICAgIHZhbHVlOiAxLAogICAgdGV4dDogJ8SQw6MgeMOhYyBuaOG6rW4nLAogICAgY29sb3I6ICdpbmZvJwogIH0sIHsKICAgIHZhbHVlOiAyLAogICAgdGV4dDogJ1h14bqldCBraG8nLAogICAgY29sb3I6ICdwcmltYXJ5JwogIH0sIHsKICAgIHZhbHVlOiAzLAogICAgdGV4dDogJ8SQw6MgZ2lhbycsCiAgICBjb2xvcjogJ3N1Y2Nlc3MnCiAgfSwgewogICAgdmFsdWU6IDQsCiAgICB0ZXh0OiAnxJDDoyBo4buneScsCiAgICBjb2xvcjogJ2RhbmdlcicKICB9XQp9Owp2YXIgZ2V0dGVycyA9IHsKICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuZm9vZHM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsaXN0Rm9vZDogZnVuY3Rpb24gbGlzdEZvb2QoX3JlZiwgZGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBIVFRQLmdldCgiL3NhbnBoYW0vZGFuaG11Yy8iLmNvbmNhdChkYXRhKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9GT09EUycsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGdldGZvb2Q6IGZ1bmN0aW9uIGdldGZvb2QoX3JlZjIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEhUVFAuZ2V0KCIvc2FucGhhbSIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfRk9PRFMnLCByZXMuZGF0YSk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIHNlYXJjaGZvb2Q6IGZ1bmN0aW9uIHNlYXJjaGZvb2QoX3JlZjMsIGRhdGEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBIVFRQLnBvc3QoIi9mb29kL3NlYXJjaCIsIHsKICAgICAgICAgICAgICAgIGZvb2ROYW1lOiBkYXRhCiAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9GT09EUycsIHJlcy5kYXRhLmRhdGEuc2xpY2UoMCwgMTIpKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0TnVtUXVhbjogZnVuY3Rpb24gZ2V0TnVtUXVhbihfcmVmNCwgbWFraCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciBjb21taXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gSFRUUC5nZXQoIi9udW1jYXJ0LyIuY29uY2F0KG1ha2gpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgnU0VUX05VTScsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9OVU0nLCAwKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0sCiAgbGlzdEJpbGxzOiBmdW5jdGlvbiBsaXN0QmlsbHMoX3JlZjUsIG1ha2gpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEhUVFAuZ2V0KCIvZG9uaGFuZy8iLmNvbmNhdChtYWtoKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9CSUxMUycsIHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlQmlsbHM6IGZ1bmN0aW9uIGRlbGV0ZUJpbGxzKF9yZWY2LCBkYXRhKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgSFRUUC5kZWxldGUoIi9naW9oYW5nLyIuY29uY2F0KGRhdGEubWFraCwgIi8iKS5jb25jYXQoZGF0YS5mb29kSWQpKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29tbWl0KCk7CiAgICB9KTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0ZPT0RTOiBmdW5jdGlvbiBTRVRfRk9PRFMoc3RhdGUsIGZvb2RzKSB7CiAgICBzdGF0ZS5mb29kcyA9IGZvb2RzOwogIH0sCiAgU0VUX05VTTogZnVuY3Rpb24gU0VUX05VTShzdGF0ZSwgbnVtKSB7CiAgICBzdGF0ZS5RdWFudHkgPSBudW07CiAgICBzdGF0ZS5vbGRRdWFuID0gbnVtOwogIH0sCiAgU0VUX0JJTExTOiBmdW5jdGlvbiBTRVRfQklMTFMoc3RhdGUsIGJpbGwpIHsKICAgIHN0YXRlLmJpbGwgPSBiaWxsOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/hieule/Desktop/DoAn/src/store/module/food.js"],"names":["HTTP","state","foods","Quanty","oldQuan","bill","status","value","text","color","getters","loading","actions","listFood","data","commit","get","then","res","getfood","searchfood","post","foodName","slice","getNumQuan","makh","catch","listBills","deleteBills","delete","foodId","mutations","SET_FOODS","SET_NUM","num","SET_BILLS"],"mappings":"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","sourcesContent":["import { HTTP } from \"../../API/http_common\";\nconst state = {\n    foods: [],\n    Quanty: 0,\n    oldQuan: 0,\n    bill: [],\n    status: [{ value: 0, text: 'Chờ xác nhận', color: 'warning' }, { value: 1, text: 'Đã xác nhận', color: 'info' }, { value: 2, text: 'Xuất kho', color: 'primary' }, { value: 3, text: 'Đã giao', color: 'success' }, { value: 4, text: 'Đã hủy', color: 'danger' }]\n\n}\nconst getters = {\n    loading: state => state.foods\n}\nconst actions = {\n    async listFood({ commit }, data) {\n        await HTTP.get(`/sanpham/danhmuc/${data}`)\n            .then((res) => { commit('SET_FOODS', res.data) });\n    },\n    async getfood({ commit }) {\n        await HTTP.get(`/sanpham`).then((res) => {\n            commit('SET_FOODS', res.data)\n        }\n        );\n    },\n    async searchfood({ commit }, data) {\n        HTTP.post(`/food/search`, { foodName: data }).then((res) => {\n            commit('SET_FOODS', res.data.data.slice(0, 12))\n        });\n    },\n    async getNumQuan({ commit }, makh) {\n        await HTTP.get(`/numcart/${makh}`).then((res) => {\n            commit('SET_NUM', res.data)\n        }).catch(() => { commit('SET_NUM', 0) });\n    },\n    async listBills({ commit }, makh) {\n        await HTTP.get(`/donhang/${makh}`)\n            .then((res) => { commit('SET_BILLS', res.data) });\n    },\n    deleteBills({ commit }, data) {\n        HTTP.delete(`/giohang/${data.makh}/${data.foodId}`).then(() => {\n            commit()\n        });\n    },\n}\nconst mutations = {\n    SET_FOODS(state, foods) {\n        state.foods = foods\n    },\n    SET_NUM(state, num) {\n        state.Quanty = num\n        state.oldQuan = num\n    },\n    SET_BILLS(state, bill) {\n        state.bill = bill\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}