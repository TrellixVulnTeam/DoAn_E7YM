{"remainingRequest":"/home/hieule/lequanghieu1.github.io/node_modules/babel-loader/lib/index.js!/home/hieule/lequanghieu1.github.io/node_modules/eslint-loader/index.js??ref--13-0!/home/hieule/lequanghieu1.github.io/src/store/module/food.js","dependencies":[{"path":"/home/hieule/lequanghieu1.github.io/src/store/module/food.js","mtime":1626166437783},{"path":"/home/hieule/lequanghieu1.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1626151276645},{"path":"/home/hieule/lequanghieu1.github.io/node_modules/babel-loader/lib/index.js","mtime":1626151276101},{"path":"/home/hieule/lequanghieu1.github.io/node_modules/eslint-loader/index.js","mtime":1626151277117}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2hpZXVsZS9sZXF1YW5naGlldTEuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBIVFRQIH0gZnJvbSAiLi4vLi4vQVBJL2h0dHBfY29tbW9uIjsKdmFyIHN0YXRlID0gewogIGZvb2RzOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuZm9vZHM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBsaXN0Rm9vZDogZnVuY3Rpb24gbGlzdEZvb2QoX3JlZiwgZGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBIVFRQLmdldCgiL2NhdGUvZm9vZC8iLmNvbmNhdChkYXRhLCAiLzAvMTIiKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9GT09EUycsIHJlcy5kYXRhLmRhdGEpOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0Zm9vZDogZnVuY3Rpb24gZ2V0Zm9vZChfcmVmMiwgZGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gSFRUUC5nZXQoIi9mb29kL2xpc3QvIi5jb25jYXQoZGF0YSwgIi8xMiIpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgnU0VUX0ZPT0RTJywgcmVzLmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0ZPT0RTOiBmdW5jdGlvbiBTRVRfRk9PRFMoc3RhdGUsIGZvb2RzKSB7CiAgICBzdGF0ZS5mb29kcyA9IGZvb2RzOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/hieule/lequanghieu1.github.io/src/store/module/food.js"],"names":["HTTP","state","foods","getters","loading","actions","listFood","data","commit","get","then","res","getfood","mutations","SET_FOODS"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,uBAArB;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE;AADG,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,iBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA;AADF,CAAhB;AAGA,IAAMG,OAAO,GAAG;AACNC,EAAAA,QADM,0BACeC,IADf,EACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,cAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,qBACvBR,IAAI,CAACS,GAAL,sBAAuBF,IAAvB,YACDG,IADC,CACI,UAACC,GAAD,EAAS;AAAEH,gBAAAA,MAAM,CAAC,WAAD,EAAcG,GAAG,CAACJ,IAAJ,CAASA,IAAvB,CAAN;AAAoC,eADnD,CADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhC,GAJW;AAKNK,EAAAA,OALM,0BAKcL,IALd,EAKoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACtBR,IAAI,CAACS,GAAL,sBAAuBF,IAAvB,UAAkCG,IAAlC,CAAuC,UAACC,GAAD,EAAS;AAClDH,gBAAAA,MAAM,CAAC,WAAD,EAAcG,GAAG,CAACJ,IAAJ,CAASA,IAAvB,CAAN;AACH,eAFK,CADsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK/B;AAVW,CAAhB;AAYA,IAAMM,SAAS,GAAG;AACdC,EAAAA,SADc,qBACJb,KADI,EACGC,KADH,EACU;AACpBD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH;AAHa,CAAlB;AAMA,eAAe;AACXD,EAAAA,KAAK,EAALA,KADW;AAEXE,EAAAA,OAAO,EAAPA,OAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXQ,EAAAA,SAAS,EAATA;AAJW,CAAf","sourcesContent":["import { HTTP } from \"../../API/http_common\";\nconst state = {\n    foods: [],\n\n}\nconst getters = {\n    loading: state => state.foods\n}\nconst actions = {\n    async listFood({ commit }, data) {\n        await HTTP.get(`/cate/food/${data}/0/12`)\n            .then((res) => { commit('SET_FOODS', res.data.data) });\n    },\n    async getfood({ commit }, data) {\n        await HTTP.get(`/food/list/${data}/12`).then((res) => {\n            commit('SET_FOODS', res.data.data)\n        }\n        );\n    }\n}\nconst mutations = {\n    SET_FOODS(state, foods) {\n        state.foods = foods\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}