{"remainingRequest":"/home/hieule/DoAn/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/hieule/DoAn/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hieule/DoAn/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hieule/DoAn/src/components/FoodList.vue?vue&type=template&id=1b36f768&scoped=true&","dependencies":[{"path":"/home/hieule/DoAn/src/components/FoodList.vue","mtime":1626236250644},{"path":"/home/hieule/DoAn/node_modules/cache-loader/dist/cjs.js","mtime":1626151276645},{"path":"/home/hieule/DoAn/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1626151279033},{"path":"/home/hieule/DoAn/node_modules/cache-loader/dist/cjs.js","mtime":1626151276645},{"path":"/home/hieule/DoAn/node_modules/vue-loader/lib/index.js","mtime":1626151279033}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}