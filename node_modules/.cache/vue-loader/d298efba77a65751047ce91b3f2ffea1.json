{"remainingRequest":"/home/hieule/Desktop/DoAn/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/hieule/Desktop/DoAn/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hieule/Desktop/DoAn/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hieule/Desktop/DoAn/src/components/index.vue?vue&type=template&id=47323bf2&","dependencies":[{"path":"/home/hieule/Desktop/DoAn/src/components/index.vue","mtime":1646237300843},{"path":"/home/hieule/Desktop/DoAn/node_modules/cache-loader/dist/cjs.js","mtime":1626151276645},{"path":"/home/hieule/Desktop/DoAn/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1626151279033},{"path":"/home/hieule/Desktop/DoAn/node_modules/cache-loader/dist/cjs.js","mtime":1626151276645},{"path":"/home/hieule/Desktop/DoAn/node_modules/vue-loader/lib/index.js","mtime":1626151279033}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}